using IntegratedJobPortal.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Security;

namespace IntegratedJobPortal.Common
{
    public class Utility
    {
        public KeyValuePair ResetPassword(string LoginId, string SecurityCode, string NewPassword)
        {
            KeyValuePair keyvalue = new Models.KeyValuePair();
            keyvalue.Key = "0";
            DBLib objDBLiv = new DBLib();
            var userInfo = objDBLiv.GetUserId(LoginId);
            if (userInfo.UserId > 0)
            {
              var  USR_Pwd = FormsAuthentication.HashPasswordForStoringInConfigFile(NewPassword.Trim(), "SHA1");
                if (objDBLiv.ValidateResetUser(LoginId, SecurityCode))
                {
                    objDBLiv.ResetUserPassword(userInfo.UserId, USR_Pwd);

                    //string url = System.Configuration.ConfigurationSettings.AppSettings["LoginUrl"].ToString();
                    //string _strJavaScript = "";

                    //if (url == "")
                    //{
                    //    url = "https://oms.pyramidci.com/oms5.0/Security/SRTLogn.aspx";
                    //}
                    objDBLiv.UpdateOMSPassword(userInfo.UserNameId, LoginId, NewPassword);

                    keyvalue.Value = "You password has been reset successfully.";
                    keyvalue.Key = "1";

                }
                else
                {
                   keyvalue.Value = "Invalid Security Code.";
                }

            }
            else
            {
                keyvalue.Value = "Invalid Login Id.";
            }


            return keyvalue;

        }
     
        public KeyValuePair ForgotPassword(string LoginId)
        {
            KeyValuePair keyvalue = new Models.KeyValuePair();
            keyvalue.Key = "0";
            DBLib objDBLiv = new DBLib();
            UserDetails objUser = objDBLiv.GetUserEmails(LoginId);

            if (objUser != null && !string.IsNullOrEmpty(objUser.UserName))
            {
                string fromEmailId = "OMS<MailSupport@pyramidconsultinginc.com>";
                string firstName = "";
                

                firstName = objUser.UserName;

                if (string.IsNullOrEmpty(objUser.Email))
                {
                    keyvalue.Value = "EmailId does not exist for user. Please contact the Administrator, and update your email id.";
                }
                else
                {
                    string securityCode = "";

                    securityCode = Guid.NewGuid().ToString("N").Substring(0, 8).ToUpper();
                    int result = objDBLiv.InsertAutoGenerateData(securityCode, LoginId, objUser.Email);

                    if (result == 1)
                    {
                        SendEmail(fromEmailId, objUser.Email.Split(','), "OMS Reset Password Details", GetMailBody(securityCode, firstName, LoginId));

                        keyvalue.Value = "Details for resetting the password have been sent to your ID :\n" + objUser.Email;
                        keyvalue.Key = "1";
                    }
                    else
                        keyvalue.Value = "Please try again.";


                }
            }
            else
            {
                keyvalue.Value = "Invalid Login Id.";
            }
            return keyvalue;
        }

        private void SendEmail(string mailFrom, string[] mailToIds, string subject, string mailBody)
        {

            MailingUtility.Mail testMail = null;
            MailingUtility.MailManager mailManager = null;

            try
            {
                testMail = new MailingUtility.Mail();
                //testMail.To.AddAddress(mailTo);
                string SendAsDefaultMail = System.Configuration.ConfigurationManager.AppSettings["SendAsDefaultMail"].ToString();
                string DefaultMailID = System.Configuration.ConfigurationManager.AppSettings["DefaultMailID"].ToString();
                if (SendAsDefaultMail == "Y")
                {
                    testMail.To.AddAddress(DefaultMailID);
                }
                else
                {
                    for (int i = 0; i < mailToIds.Length; i++)
                    {
                        if (mailToIds[i] != "")
                        {
                            testMail.To.AddAddress(mailToIds[i]);
                        }
                    }
                }
                testMail.Bcc.AddAddress("onlineH@pyramidci.com");

                testMail.From.MailAddress = mailFrom;
                testMail.Priority = System.Net.Mail.MailPriority.Normal;
                mailManager = new MailingUtility.MailManager();
                MailingUtility.MailTemplate tamplate = new MailingUtility.MailTemplate();

                tamplate.Subject = subject;
                tamplate.Body = mailBody;

                mailManager.SendMail(testMail, tamplate);


            }
            catch (System.Exception ex)
            {
                ErrorLog.WriteErrorLog(ex.Message.ToString(), "SendEmail");
            }
            finally
            {
                testMail = null;
                mailManager = null;
            }
        }

        private string GetMailBody(string securityCode, string firstName, string userID)
        {
            System.Text.StringBuilder strbodyText = null;
            System.IO.StreamReader sr = null;
            string returnText = null;
            string url = System.Configuration.ConfigurationSettings.AppSettings["ResetUrl"].ToString();
            try
            {
                string filePath = HttpContext.Current.Server.MapPath("~/Templates/ResetPassword.txt");
                string bodyText = string.Empty;
                sr = new System.IO.StreamReader(filePath);
                bodyText = sr.ReadToEnd();

                if (bodyText.Trim() != string.Empty)
                {
                    strbodyText = new System.Text.StringBuilder(bodyText);
                    strbodyText.Replace("User~", firstName);
                    strbodyText.Replace("LoginId~", userID);
                    strbodyText.Replace("SecurityCode~", securityCode);
                    strbodyText.Replace("url~", url);

                }
                returnText = strbodyText.ToString();

            }
            catch (Exception ex)
            {
                ErrorLog.WriteErrorLog(ex.Message.ToString(), "GetMailBody()");
            }
            finally
            {
                strbodyText = null;
                sr.Dispose();
            }
            return returnText;
        }
    }
}